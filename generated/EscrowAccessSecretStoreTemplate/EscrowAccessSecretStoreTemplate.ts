// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class AgreementCreated extends EthereumEvent {
  get params(): AgreementCreated__Params {
    return new AgreementCreated__Params(this);
  }
}

export class AgreementCreated__Params {
  _event: AgreementCreated;

  constructor(event: AgreementCreated) {
    this._event = event;
  }

  get _agreementId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _accessConsumer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _accessProvider(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _timeLocks(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._event.parameters[5].value.toBigIntArray();
  }
}

export class OwnershipTransferred extends EthereumEvent {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class EscrowAccessSecretStoreTemplate__getAgreementDataResult {
  value0: Address;
  value1: Address;

  constructor(value0: Address, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromAddress(this.value0));
    map.set("value1", EthereumValue.fromAddress(this.value1));
    return map;
  }
}

export class EscrowAccessSecretStoreTemplate extends SmartContract {
  static bind(address: Address): EscrowAccessSecretStoreTemplate {
    return new EscrowAccessSecretStoreTemplate(
      "EscrowAccessSecretStoreTemplate",
      address
    );
  }

  createAgreement(
    _id: Bytes,
    _did: Bytes,
    _conditionIds: Array<Bytes>,
    _timeLocks: Array<BigInt>,
    _timeOuts: Array<BigInt>
  ): BigInt {
    let result = super.call("createAgreement", [
      EthereumValue.fromFixedBytes(_id),
      EthereumValue.fromFixedBytes(_did),
      EthereumValue.fromFixedBytesArray(_conditionIds),
      EthereumValue.fromUnsignedBigIntArray(_timeLocks),
      EthereumValue.fromUnsignedBigIntArray(_timeOuts)
    ]);

    return result[0].toBigInt();
  }

  try_createAgreement(
    _id: Bytes,
    _did: Bytes,
    _conditionIds: Array<Bytes>,
    _timeLocks: Array<BigInt>,
    _timeOuts: Array<BigInt>
  ): CallResult<BigInt> {
    let result = super.tryCall("createAgreement", [
      EthereumValue.fromFixedBytes(_id),
      EthereumValue.fromFixedBytes(_did),
      EthereumValue.fromFixedBytesArray(_conditionIds),
      EthereumValue.fromUnsignedBigIntArray(_timeLocks),
      EthereumValue.fromUnsignedBigIntArray(_timeOuts)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  createAgreement1(
    _id: Bytes,
    _did: Bytes,
    _conditionIds: Array<Bytes>,
    _timeLocks: Array<BigInt>,
    _timeOuts: Array<BigInt>,
    _accessConsumer: Address
  ): BigInt {
    let result = super.call("createAgreement", [
      EthereumValue.fromFixedBytes(_id),
      EthereumValue.fromFixedBytes(_did),
      EthereumValue.fromFixedBytesArray(_conditionIds),
      EthereumValue.fromUnsignedBigIntArray(_timeLocks),
      EthereumValue.fromUnsignedBigIntArray(_timeOuts),
      EthereumValue.fromAddress(_accessConsumer)
    ]);

    return result[0].toBigInt();
  }

  try_createAgreement1(
    _id: Bytes,
    _did: Bytes,
    _conditionIds: Array<Bytes>,
    _timeLocks: Array<BigInt>,
    _timeOuts: Array<BigInt>,
    _accessConsumer: Address
  ): CallResult<BigInt> {
    let result = super.tryCall("createAgreement", [
      EthereumValue.fromFixedBytes(_id),
      EthereumValue.fromFixedBytes(_did),
      EthereumValue.fromFixedBytesArray(_conditionIds),
      EthereumValue.fromUnsignedBigIntArray(_timeLocks),
      EthereumValue.fromUnsignedBigIntArray(_timeOuts),
      EthereumValue.fromAddress(_accessConsumer)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  getAgreementData(
    _id: Bytes
  ): EscrowAccessSecretStoreTemplate__getAgreementDataResult {
    let result = super.call("getAgreementData", [
      EthereumValue.fromFixedBytes(_id)
    ]);

    return new EscrowAccessSecretStoreTemplate__getAgreementDataResult(
      result[0].toAddress(),
      result[1].toAddress()
    );
  }

  try_getAgreementData(
    _id: Bytes
  ): CallResult<EscrowAccessSecretStoreTemplate__getAgreementDataResult> {
    let result = super.tryCall("getAgreementData", [
      EthereumValue.fromFixedBytes(_id)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new EscrowAccessSecretStoreTemplate__getAgreementDataResult(
        value[0].toAddress(),
        value[1].toAddress()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", []);

    return result[0].toAddress();
  }

  try_owner(): CallResult<Address> {
    let result = super.tryCall("owner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", []);

    return result[0].toBoolean();
  }

  try_isOwner(): CallResult<boolean> {
    let result = super.tryCall("isOwner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  getConditionTypes(): Array<Address> {
    let result = super.call("getConditionTypes", []);

    return result[0].toAddressArray();
  }

  try_getConditionTypes(): CallResult<Array<Address>> {
    let result = super.tryCall("getConditionTypes", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddressArray());
  }
}

export class CreateAgreementCall extends EthereumCall {
  get inputs(): CreateAgreementCall__Inputs {
    return new CreateAgreementCall__Inputs(this);
  }

  get outputs(): CreateAgreementCall__Outputs {
    return new CreateAgreementCall__Outputs(this);
  }
}

export class CreateAgreementCall__Inputs {
  _call: CreateAgreementCall;

  constructor(call: CreateAgreementCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _conditionIds(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get _timeLocks(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class CreateAgreementCall__Outputs {
  _call: CreateAgreementCall;

  constructor(call: CreateAgreementCall) {
    this._call = call;
  }

  get size(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateAgreement1Call extends EthereumCall {
  get inputs(): CreateAgreement1Call__Inputs {
    return new CreateAgreement1Call__Inputs(this);
  }

  get outputs(): CreateAgreement1Call__Outputs {
    return new CreateAgreement1Call__Outputs(this);
  }
}

export class CreateAgreement1Call__Inputs {
  _call: CreateAgreement1Call;

  constructor(call: CreateAgreement1Call) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _conditionIds(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get _timeLocks(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _accessConsumer(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class CreateAgreement1Call__Outputs {
  _call: CreateAgreement1Call;

  constructor(call: CreateAgreement1Call) {
    this._call = call;
  }

  get size(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends EthereumCall {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends EthereumCall {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class InitializeCall extends EthereumCall {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class Initialize1Call extends EthereumCall {
  get inputs(): Initialize1Call__Inputs {
    return new Initialize1Call__Inputs(this);
  }

  get outputs(): Initialize1Call__Outputs {
    return new Initialize1Call__Outputs(this);
  }
}

export class Initialize1Call__Inputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _agreementStoreManagerAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _didRegistryAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _accessSecretStoreConditionAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _lockRewardConditionAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _escrowRewardAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class Initialize1Call__Outputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }
}
