specVersion: 0.0.2
description: OceanProtocol Subgraph
repository: https://github.com/santteegt/oceanprotocol-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: DIDRegistry
    network: nile
    source:
      address: '0x4A0f7F763B1A7937aED21D63b2A78adc89c5Db23'
      abi: DIDRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - DIDRegistry
        - DIDPermissions
      abis:
        - name: DIDRegistry
          file: ./abis/DIDRegistry.json
      eventHandlers:
        - event: DIDAttributeRegistered(indexed bytes32,indexed address,indexed bytes32,string,address,uint256)
          handler: handleNewDIDRegistry
        - event: DIDOwnershipTransferred(bytes32,address,address)
          handler: handletTransferredDIDOwnership
        - event: DIDProviderAdded(bytes32,address)
          handler: handletDIDProviderAdded
        - event: DIDProviderRemoved(bytes32,address,bool)
          handler: handletDIDProviderRemoved
        - event: DIDPermissionGranted(indexed bytes32,indexed address,indexed address)
          handler: handletDIDPermissionGranted
        - event: DIDPermissionRevoked(indexed bytes32,indexed address,indexed address)
          handler: handletDIDPermissionRevoked
      callHandlers:
        - function: registerAttribute(bytes32,bytes32,address[],string)
          handler: handleNewDIDRegistryCall
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: SEATemplateStore
    network: nile
    source:
      address: '0x9768c8ae44f1dc81cAA98F48792aA5730cAd2F73'
      abi: TemplateStoreManager
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - SEATemplate
      abis:
        - name: TemplateStoreManager
          file: ./abis/TemplateStoreManager.json
      callHandlers:
        - function: proposeTemplate(address,address[],bytes32[],string)
          handler: handleNewTemplateProposal
        - function: approveTemplate(bytes32)
          handler: handleNewTemplateApproval
        - function: revokeTemplate(bytes32)
          handler: handleNewTemplateRevoke
      file: ./src/mappingSEA.ts

  - kind: ethereum/contract
    name: SEAConditionStore
    network: nile
    source:
      address: '0x39b0AA775496C5ebf26f3B81C9ed1843f09eE466'
      abi: ConditionStoreManager
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - SEACondition
      abis:
        - name: ConditionStoreManager
          file: ./abis/ConditionStoreManager.json
      eventHandlers:
        - event: ConditionCreated(indexed bytes32,indexed address,indexed address)
          handler: handleNewCondition
        - event: ConditionUpdated(indexed bytes32,indexed address,indexed uint8,address)
          handler: handleConditionUpdated
      file: ./src/mappingSEA.ts

  - kind: ethereum/contract
    name: EscrowAccessSecretStoreTemplate
    network: nile
    source:
      address: '0xfA16d26e9F4fffC6e40963B281a0bB08C31ed40C'
      abi: EscrowAccessSecretStoreTemplate
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - ServiceAgreement
      abis:
        - name: EscrowAccessSecretStoreTemplate
          file: ./abis/EscrowAccessSecretStoreTemplate.json
      eventHandlers:
        - event: AgreementCreated(indexed bytes32,bytes32,indexed address,indexed address,uint256[],uint256[])
          handler: handleNewEscrowAccessSecretStoreSEA
      callHandlers:
        - function: createAgreement(bytes32,bytes32,bytes32[],uint256[],uint256[],address)
          handler: handleNewSEACall
      file: ./src/mappingTemplates.ts

  - kind: ethereum/contract
    name: AccessSecretStoreCondition
    network: nile
    source:
      address: '0x45DE141F8Efc355F1451a102FB6225F1EDd2921d'
      abi: AccessSecretStoreCondition
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - AccessSecretStoreCondition
      abis:
        - name: AccessSecretStoreCondition
          file: ./abis/AccessSecretStoreCondition.json
      eventHandlers:
        - event: Fulfilled(indexed bytes32,indexed bytes32,indexed address,bytes32)
          handler: handleFulfilledAccessSecretStoreCondition
      file: ./src/mappingConditions.ts

  - kind: ethereum/contract
    name: LockRewardCondition
    network: nile
    source:
      address: '0xE30FC30c678437e0e8F78C52dE9db8E2752781a0'
      abi: LockRewardCondition
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - LockRewardCondition
      abis:
        - name: LockRewardCondition
          file: ./abis/LockRewardCondition.json
      eventHandlers:
        - event: Fulfilled(indexed bytes32,indexed address,bytes32,uint256)
          handler: handleFulfilledLockRewardCondition
      file: ./src/mappingConditions.ts

  - kind: ethereum/contract
    name: EscrowRewardCondition
    network: nile
    source:
      address: '0xeD4Ef53376C6f103d2d7029D7E702e082767C6ff'
      abi: EscrowReward
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - EscrowRewardCondition
      abis:
        - name: EscrowReward
          file: ./abis/EscrowReward.json
      eventHandlers:
        - event: Fulfilled(indexed bytes32,indexed address,bytes32,uint256)
          handler: handleFulfilledEscrowRewardCondition
      file: ./src/mappingConditions.ts

  - kind: ethereum/contract
    name: StandardBounties
    network: nile
    source:
      address: '0x9E3833699C3ce5B32ddB360511294484b096f2ee'
      abi: StandardBounties
      startBlock: 3400000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Bounty
      abis:
        - name: StandardBounties
          file: ./abis/StandardBounties.json
      eventHandlers:
        - event: BountyIssued(uint256,address,address[],address[],string,uint256,address,uint256)
          handler: handleBountyIssued
        - event: ContributionAdded(uint256,uint256,address,uint256)
          handler: handleContributionAdded
        - event: BountyFulfilled(uint256,uint256,address[],string,address)
          handler: handleBountyFulfilled
        - event: FulfillmentAccepted(uint256,uint256,address,uint256[])
          handler: handleFulfillmentAccepted
      # callHandlers:
      #   - function: contribute(address,uint256,uint256)
      #     handler: handlerContributeCall
      file: ./src/mappingBounties.ts


  # - kind: ethereum/contract
  #   name: TokenDispenser
  #   network: nile
  #   source:
  #     address: '0x865396b7ddc58C693db7FCAD1168E3BD95Fe3368'
  #     abi: Dispenser
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.3
  #     language: wasm/assemblyscript
  #     entities:
  #       - Dispenser
  #     abis:
  #       - name: Dispenser
  #         file: ./abis/Dispenser.json
  #     eventHandlers:
  #       - event: RequestFrequencyExceeded(indexed address,uint256)
  #         handler: handleDispenserFrequencyExceeded
  #       - event: RequestLimitExceeded(indexed address,uint256,uint256)
  #         handler: handleDispenserLimitExceeded
  #     callHandlers:
  #       - function: requestTokens(uint256)
  #         handler: handleDispenserRequest
  #     file: ./src/mapping.ts
